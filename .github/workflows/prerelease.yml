name: prerelease
on: workflow_dispatch

permissions:
  contents: write # for checkout and tag
  pull-requests: write # for comments
  packages: write # for publish

jobs:
  prerelease:
    name: Pre-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set Current VSCode Version
      #   run: |
      #     CURRENT_VERSION=$(node -p 'require("./packages/typescript-explorer-vscode/package.json").version')
      #     echo "CURRENT_VSCODE_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      - name: Set Current Version
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build

      - name: Package Vsix
        env:
          VSIX_FILENAME: typescript-explorer-vscode-v${{ env.CURRENT_VERSION }}.vsix
        run: yarn workspace typescript-explorer-vscode package -o ./${{ env.VSIX_FILENAME }}

      - name: Get Changelog
        id: changelog
        run: |
          echo "::set-output name=markdown::$(yarn --silent changelog:get)"

      - name: Tag Check
        id: tag_check
        run: |
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "::set-output name=exists_tag::true"
          else
            echo "::set-output name=exists_tag::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test CHANGELOG_MD
        run: echo "${{ steps.changelog.outputs.markdown }}"

      # - name: Create Git Tag
      #   if: steps.tag_check.outputs.exists_tag == 'false'
      #   uses: pkgdeps/git-tag-action@v2
      #   with:
      #     version: ${{ env.CURRENT_VERSION }}
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     github_repo: ${{ github.repository }}
      #     git_commit_sha: ${{ github.sha }}
      #     git_tag_prefix: "v"

      # - name: Create Pre-release
      #   id: create_prerelease
      #   if: steps.tag_check.outputs.exists_tag == 'false'
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v${{ env.CURRENT_VERSION }}

      #     # Copy Pull Request's tile and body to Release Note
      #     release_name: ts-type-explorer v${{ env.CURRENT_VERSION }}
      #     body: |
      #       ${{ env.CHANGELOG_MD }}
      #     draft: false
      #     prerelease: true
